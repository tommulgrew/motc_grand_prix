#include "gameconstants"
#include "configFile"

// Structures

struct GameConfig {
    float controllerDeadzone;
    float controllerSmoothing;
    float controllerCurve;      // 1 = linear. 2 = x^2 etc.
    float controllerFactor;
    int drawDistance;
    bool showRacingLine;
    int playerColour;           // Index into playerCarPalettes array
    int difficulty;
    int trackIndex;
    int lapOptionIndex;
    int raceType;
    int screenResIndex;
}

// Data

GameConfig gameConfig = new GameConfig {

    // Defaults
    controllerDeadzone = 0.06,
    controllerSmoothing = 0.9,
    controllerCurve = 2,
    controllerFactor = 1.1,
    drawDistance = 80,
    showRacingLine = true,
    playerColour = 0,
    difficulty = 1,
    trackIndex = 0,
    lapOptionIndex = 2,
    raceType = RACETYPE_SINGLE
};

Vec[] screenResolutions = new Vec[] {
    new Vec { x = 320, y = 240 },
    new Vec { x = 640, y = 480 }
};

string configFilename() {
    return savedir() + "mot_gp.txt";
}

void loadGameConfig() {
    ConfigFile f = loadConfigFile(configFilename());
    if (not eof(f)) { gameConfig.controllerDeadzone = readFloat(f); }
    if (not eof(f)) { gameConfig.controllerSmoothing = readFloat(f); }
    if (not eof(f)) { gameConfig.controllerCurve = readFloat(f); }
    if (not eof(f)) { gameConfig.controllerFactor = readFloat(f); }
    if (not eof(f)) { gameConfig.playerColour = readInt(f); }
    if (not eof(f)) { gameConfig.difficulty = readInt(f); }
    if (not eof(f)) { gameConfig.trackIndex = readInt(f); }
    if (not eof(f)) { gameConfig.showRacingLine = readBool(f); }
    if (not eof(f)) { gameConfig.lapOptionIndex = readInt(f); }
    if (not eof(f)) { gameConfig.drawDistance = readInt(f); }
    if (not eof(f)) { gameConfig.raceType = readInt(f); }
    if (not eof(f)) { gameConfig.screenResIndex = readInt(f); }
}

void saveConfig() {
    string configFile = configFilename();
    log("Saving config to: " + configFile + "\n");

    string text = 
        gameConfig.controllerDeadzone + "\n" + 
        gameConfig.controllerSmoothing + "\n" +
        gameConfig.controllerCurve + "\n" +
        gameConfig.controllerFactor + "\n" + 
        gameConfig.playerColour + "\n" + 
        gameConfig.difficulty + "\n" + 
        gameConfig.trackIndex + "\n" + 
        gameConfig.showRacingLine + "\n" + 
        gameConfig.lapOptionIndex + "\n" + 
        gameConfig.drawDistance + "\n" + 
        gameConfig.raceType + "\n" + 
        gameConfig.screenResIndex;
    savetext(configFile, text);
}
