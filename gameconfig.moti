// Structures

struct GameConfig {
    float controllerDeadzone;
    float controllerSmoothing;
    float controllerCurve;      // 1 = linear. 2 = x^2 etc.
    float controllerFactor;
    int drawDistance;
    bool showRacingLine;
    int playerColour;           // Index into playerCarPalettes array
    int difficulty;
    int trackIndex;
    int lapOptionIndex;
}

// Data

GameConfig gameConfig = new GameConfig {

    // Defaults
    controllerDeadzone = 0.06,
    controllerSmoothing = 0.9,
    controllerCurve = 2,
    controllerFactor = 1.1,
    drawDistance = 80,
    showRacingLine = true,
    playerColour = 0,
    difficulty = 1,
    trackIndex = 0,
    lapOptionIndex = 2
};

string configFilename() {
    return savedir() + "mot_gp.txt";
}

void loadGameConfig() {
    string configFile = configFilename();
    log("Loading config from: " + configFile + "\n");
    if (not fileexists(configFile)) {
        log("No file found. Using default config.");
        return;
    }

    // Load config from file.
    // Config is stored as a text file, with one setting value per line.
    // Some lines may be missing from the end if the config was saved from an 
    // earlier version.
    string text = loadtext(configFile);
    string[] lines = split(text, "\n");

    // Trim blank lines from end
    while (lines.length > 0 and lines[lines.length - 1] = "") {
        lines.remove(lines.length - 1);
    }
    int i = 0, ct = lines.length;

    // Parse lines
    if (i < ct) { gameConfig.controllerDeadzone = tofloat(lines[i]); i++; }
    if (i < ct) { gameConfig.controllerSmoothing = tofloat(lines[i]); i++; }
    if (i < ct) { gameConfig.controllerCurve = tofloat(lines[i]); i++; }
    if (i < ct) { gameConfig.controllerFactor = tofloat(lines[i]); i++; }
    if (i < ct) { gameConfig.playerColour = toint(lines[i]); i++; }
    if (i < ct) { gameConfig.difficulty = toint(lines[i]); i++; }
    if (i < ct) { gameConfig.trackIndex = toint(lines[i]); i++; }
    if (i < ct) { gameConfig.showRacingLine = lines[i] = "true"; i++; }
    if (i < ct) { gameConfig.lapOptionIndex = toint(lines[i]); i++; }
    if (i < ct) { gameConfig.drawDistance = toint(lines[i]); i++; }
}

void saveConfig() {
    string configFile = configFilename();
    log("Saving config to: " + configFile + "\n");

    string text = 
        gameConfig.controllerDeadzone + "\n" + 
        gameConfig.controllerSmoothing + "\n" +
        gameConfig.controllerCurve + "\n" +
        gameConfig.controllerFactor + "\n" + 
        gameConfig.playerColour + "\n" + 
        gameConfig.difficulty + "\n" + 
        gameConfig.trackIndex + "\n" + 
        gameConfig.showRacingLine + "\n" + 
        gameConfig.lapOptionIndex + "\n" + 
        gameConfig.drawDistance;
    savetext(configFile, text);
}
