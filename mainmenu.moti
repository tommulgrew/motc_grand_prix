#include "menu"
#include "render"
#include "app"
#include "ui"

// Constants

// Main menu item enums

const int MAIN_MENU_TRACK = 1;
const int MAIN_MENU_DIFFICULTY = 2;
const int MAIN_MENU_STARTRACE = 3;
const int MAIN_MENU_QUIT = 4;

// Structures

struct MainMenuState {
    MenuState state;
    int carPaletteIndex;
}

// Data

MenuParams mainMenuParams = new MenuParams {
    y = SCREEN_HEIGHT * 0.75,
    itemSpacing = 20,
    drawBackground = false
};
MainMenuState mainMenu;

// Routines

MenuItem[] getMainMenuItems();

void initMainMenu() {
    mainMenu = new MainMenuState {
        state = new MenuState,
        carPaletteIndex = rnd() * aiCarPalettes.length
    };
}

void drawMainMenu() {
    cls(1);

    // Title text
    const int TITLE_BASE_SCALE = 2;
    const int TITLE_X = SCREEN_WIDTH / 2 - 8 * 6 * TITLE_BASE_SCALE * PRATIO;
    const int TITLE_Y = SCREEN_HEIGHT * 0.15;
    const int TITLE_SCALE = TITLE_BASE_SCALE * PRATIO;
    color(5);
    printScaled("Mot's Grand Prix", TITLE_X, TITLE_Y + 2 * PRATIO, TITLE_SCALE);
    color(6);
    printScaled("Mot's Grand Prix", TITLE_X, TITLE_Y, TITLE_SCALE);

    // Draw a racing car
    colmap(aiCarPalettes[mainMenu.carPaletteIndex]);
    drawCar(new Transform {
        translate = new Vec { z = 3.5, y = -0.2 },
        skewX = -0.5,
        skewY = -0.3
    });
    colmap();

    // Menu UI
    MenuItem[] items = getMainMenuItems();
    drawMenu(mainMenuParams, mainMenu.state, items);
}

void updateMainMenu(UIInput input) {

    // Items
    MenuItem[] items = getMainMenuItems();

    // Update menu
    MenuAction action = updateMenu(mainMenu.state, items, input);

    // Perform menu action
    if (action != null) {
        if (action.menuAction = MENU_ACTION_SELECT) {
            if (action.itemID = MAIN_MENU_STARTRACE) {
                setGameMode(GAMEMODE_RACE);            
            }
            else if (action.itemID = MAIN_MENU_QUIT) {
                quitApp = true;
            }
        }
        else if (action.menuAction = MENU_ACTION_CHANGE) {
            if (action.itemID = MAIN_MENU_TRACK) {
                int index = gameConfig.trackIndex + action.delta;
                if (index >= 0 and index < tracks.length) {
                    gameConfig.trackIndex = index;
                }
            }
            else if (action.itemID = MAIN_MENU_DIFFICULTY) {
                int index = gameConfig.difficulty + action.delta;
                if (index >= 0 and index < difficultyLevels.length) {
                    gameConfig.difficulty = index;
                }
            }
        }
    }
}

MenuItem[] getMainMenuItems() {
    MenuItem[] items = new MenuItem[] {
        new MenuItem { id = MAIN_MENU_TRACK, text = "Track: " + tracks[gameConfig.trackIndex].name },
        new MenuItem { id = MAIN_MENU_DIFFICULTY, text = difficultyLevels[gameConfig.difficulty].name },
        new MenuItem { id = MAIN_MENU_STARTRACE, text = "!! Race !!" }
    };

    // Exclude quit option from web version, as quitting doesn't make sense.
    // (The game just ends and the application becomes unresponsive.)
    if (hostplatform() != "web") {
        items.add(new MenuItem { id = MAIN_MENU_QUIT, text = "Quit game" });    
    }

    return items;
}
